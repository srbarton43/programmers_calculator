make -C src test
make -C unittests test
./unittest
******* Unit Tests ********
Testing the Add Operator
_____ ADD a+b (8-bit Numbers) _____
a = 1101
b = 1011
expected a+b = 11000
actual a+b = 11000
Test Passed!
_____ ADD a+b (8-bit Numbers) _____
a = 1111
b = 1111
expected a+b = 11110
actual a+b = 11110
Test Passed!
_____ ADD a+b (8-bit Numbers) _____
a = 1100
b = 10001
expected a+b = 11101
actual a+b = 11101
Test Passed!
_____ ADD a+b (8-bit Numbers) _____
Objective: Adding Zero
a = 0
b = 10001
expected a+b = 10001
actual a+b = 10001
Test Passed!
_____ ADD a+b (8-bit Numbers) _____
Objective: Adding Two's Complement
a = 1000000
b = 11000000
expected a+b = 0
actual a+b = 0
Test Passed!
Testing LSHIFT
_____ LSHIFT num << pos (8-bit Numbers) _____
num = 110011
pos = 1
expected num << pos = 1100110
actual num << pos = 1100110
Test Passed!
_____ LSHIFT num << pos (8-bit Numbers) _____
num = 110011
pos = 10
expected num << pos = 11001100
actual num << pos = 11001100
Test Passed!
_____ LSHIFT num << pos (8-bit Numbers) _____
num = 110011
pos = 11
expected num << pos = 10011000
actual num << pos = 10011000
Test Passed!
_____ LSHIFT num << pos (8-bit Numbers) _____
num = 110011
pos = 1111
expected num << pos = 0
actual num << pos = 0
Test Passed!
Testing RSHIFT
_____ RSHIFT num >> pos (8-bit Numbers) _____
num = 110011
pos = 1
expected num >> pos = 11001
actual num >> pos = 11001
Test Passed!
_____ RSHIFT num >> pos (8-bit Numbers) _____
num = 110011
pos = 10
expected num >> pos = 1100
actual num >> pos = 1100
Test Passed!
_____ RSHIFT num >> pos (8-bit Numbers) _____
num = 110011
pos = 11
expected num >> pos = 110
actual num >> pos = 110
Test Passed!
_____ RSHIFT num >> pos (8-bit Numbers) _____
num = 110011
pos = 1111
expected num >> pos = 0
actual num >> pos = 0
Test Passed!
Testing TWO's COMPLEMENT
_____ TWO's COMPLEMENT(num) with bit words _____
Objective: Minimum Integer
num = 1
expected two's complement = 11111111
actual two's complement = 11111111
Test Passed!
_____ TWO's COMPLEMENT(num) with bit words _____
Objective: Maximum Integer
num = 1111111
expected two's complement = 10000001
actual two's complement = 10000001
Test Passed!
_____ TWO's COMPLEMENT(num) with bit words _____
Objective: Zero to Zero
num = 0
expected two's complement = 0
actual two's complement = 0
Test Passed!
_____ TWO's COMPLEMENT(num) with bit words _____
Objective: -1 to 1
num = 11111111
expected two's complement = 1
actual two's complement = 1
Test Passed!
Testing TWO's COMPLEMENT
_____ SUB b-a (8-bit Numbers) _____
Objective: 2-1 = 1
b = 10
a = 1
expected b-a = 1
actual b-a = 1
Test Passed!
_____ SUB b-a (8-bit Numbers) _____
Objective: 63-64 = -1
b = 11111110
a = 11111111
expected b-a = 11111111
actual b-a = 11111111
Test Passed!
_____ SUB b-a (8-bit Numbers) _____
Objective: 15-15 = 0
b = 1111
a = 1111
expected b-a = 0
actual b-a = 0
Test Passed!
All Tests Passed!
